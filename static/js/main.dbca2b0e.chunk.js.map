{"version":3,"sources":["stores/talk.ts","stores/index.ts","components/Header.tsx","components/MessageView.tsx","components/Chat.tsx","data/index.ts","data/scenarios/miki.ts","data/scenarios/attendance.ts","data/scenarios/result.ts","hooks/useGame.ts","components/Stamp.tsx","App.tsx","index.tsx"],"names":["initialState","name","messages","score","talkSlice","createSlice","reducers","initGame","state","initScenario","action","payload","appendMessage","id","length","time","moment","format","push","addScore","actions","store","configureStore","reducer","talk","useSelector","rawUseSelector","useStyles","makeStyles","theme","createStyles","bar","backgroundColor","menuButton","marginRight","spacing","title","flexGrow","fontWeight","Header","classes","AppBar","position","className","Toolbar","variant","IconButton","edge","color","ArrowBackIos","Typography","PhoneOutlined","Menu","timeWrapper","margin","width","marginTop","leftRoot","display","padding","avatar","height","triangle","border","borderRight","transform","text","borderRadius","TimeView","message","Grid","item","container","direction","justify","alignItems","side","MessageView","Avatar","alt","src","xs","root","overflow","backgroundImage","backgroundSize","today","smoothscroll","polyfill","Chat","ref","useRef","useEffect","view","current","scrollTo","top","scrollHeight","behavior","map","stamps","scenarios","units","start","states","shirangana","defaultRoot","interrupted","retry","success","failure","tehe","kokona","nasuo","neo","sonnakoto","miku","dame","miko","gungun","miki","yume","otome","sakia","mukako","initialPos","scenarioIndex","unitKey","stateIndex","useGame","dispatch","rawUseDispatch","useState","pos","setPos","scenario","unit","timeoutRef","nextMessage","callback","prev","setTimeout","changeUnit","nextUnitKey","stamp","isStamp","pointed","clearTimeout","gridWrapper","stampGrid","imgWrapper","paddingTop","img","left","objectFit","button","cursor","borderStyle","Stamp","onClickStamp","ArrowDropDown","type","onClick","userSelect","paper","flexDirection","App","Container","maxWidth","Paper","elevation","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dbca2b0e.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign */\nimport moment from 'moment';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Stamps } from '../data';\n\nexport type Message = {\n  side: 'left' | 'right';\n  name: string;\n  text: string;\n  isStamp?: boolean;\n  id?: number;\n  time?: string;\n};\n\nexport type Input = {\n  side: 'input';\n  root: {\n    [key in Stamps]?: string;\n  };\n  defaultRoot: string;\n};\n\nexport type End = {\n  side: 'end';\n};\n\nexport type Scenario = {\n  name: string;\n  units: {\n    [name: string]: Unit;\n  };\n};\n\nexport type Unit = {\n  states: (Message | Input | End)[];\n  interrupted?: string;\n};\n\nexport interface TalkState {\n  name: string;\n  messages: Message[];\n  score: number;\n}\n\nconst initialState: TalkState = {\n  name: '',\n  messages: [],\n  score: 0,\n};\n\nexport const talkSlice = createSlice({\n  name: 'talk',\n  initialState,\n  reducers: {\n    initGame: (state) => {\n      state.name = initialState.name;\n      state.messages = initialState.messages;\n    },\n    initScenario: (state, action: PayloadAction<string>) => {\n      state.name = action.payload;\n      state.messages = initialState.messages;\n    },\n    appendMessage: (state, action: PayloadAction<Message>) => {\n      action.payload.id = state.messages.length;\n      action.payload.time = moment().format('H:mm');\n      state.messages.push(action.payload);\n    },\n    addScore: (state) => {\n      state.score += 1;\n    },\n  },\n});\n\nexport const { initGame, initScenario, appendMessage, addScore } =\n  talkSlice.actions;\n","import { configureStore } from '@reduxjs/toolkit';\nimport {\n  useDispatch as rawUseDispatch,\n  useSelector as rawUseSelector,\n  TypedUseSelectorHook,\n} from 'react-redux';\nimport { talkSlice } from './talk';\n\nexport const store = configureStore({\n  reducer: {\n    talk: talkSlice.reducer,\n  },\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const useDispatch = () => rawUseDispatch<AppDispatch>();\nexport const useSelector: TypedUseSelectorHook<RootState> = rawUseSelector;\n","import { VFC } from 'react';\nimport { AppBar, IconButton, Toolbar, Typography } from '@material-ui/core';\nimport { ArrowBackIos, Menu, PhoneOutlined } from '@material-ui/icons';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { useSelector } from '../stores';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    bar: {\n      backgroundColor: '#234',\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n      fontWeight: 700,\n    },\n  })\n);\n\nconst Header: VFC = () => {\n  const classes = useStyles();\n  const title = useSelector((state) => state.talk.name);\n\n  return (\n    <AppBar position=\"static\" className={classes.bar}>\n      <Toolbar variant=\"dense\">\n        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\">\n          <ArrowBackIos />\n        </IconButton>\n        <Typography variant=\"body1\" className={classes.title}>\n          {title}\n        </Typography>\n        <IconButton color=\"inherit\">\n          <PhoneOutlined />\n        </IconButton>\n        <IconButton color=\"inherit\">\n          <Menu />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import { VFC } from 'react';\nimport { Avatar, Grid, Typography } from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { Message } from '../stores/talk';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    timeWrapper: {\n      margin: '0 4px',\n      width: 40,\n    },\n    time: {\n      color: '#345',\n      marginTop: -4,\n    },\n    leftRoot: {\n      display: 'flex',\n      padding: 4,\n    },\n    avatar: {\n      width: 32,\n      height: 32,\n    },\n    triangle: {\n      width: 0,\n      height: 0,\n      margin: '4px 0 0 -6px',\n      border: '6px solid transparent',\n      borderRight: '18px solid #edf1ee',\n      '-webkit-transform': 'rotate(35deg)',\n      transform: 'rotate(35deg)',\n    },\n    text: {\n      backgroundColor: '#edf1ee',\n      borderRadius: 14,\n      padding: '4px 12px',\n      margin: '6px 0 0 -10px',\n    },\n  })\n);\n\ntype Props = {\n  message: Message;\n};\n\nconst TimeView: VFC<Props> = ({ message }: Props) => {\n  const classes = useStyles();\n  return (\n    <Grid\n      item\n      container\n      direction=\"column\"\n      justify=\"flex-end\"\n      alignItems={message.side === 'left' ? 'flex-start' : 'flex-end'}\n      className={classes.timeWrapper}\n    >\n      {message.side === 'right' && (\n        <Typography variant=\"caption\" className={classes.time}>\n          既読\n        </Typography>\n      )}\n      <Typography variant=\"caption\" className={classes.time}>\n        {message.time}\n      </Typography>\n    </Grid>\n  );\n};\n\nconst MessageView: VFC<Props> = ({ message }: Props) => {\n  const classes = useStyles();\n\n  if (message.side === 'left')\n    return (\n      <div className={classes.leftRoot}>\n        <Avatar\n          alt={message.name}\n          src={`members/${message.name}.jpg`}\n          className={classes.avatar}\n        />\n        <div className={classes.triangle} />\n        <Typography variant=\"body2\" className={classes.text}>\n          {message.text}\n        </Typography>\n        <TimeView message={message} />\n      </div>\n    );\n\n  return (\n    <Grid\n      item\n      container\n      direction=\"row\"\n      justify=\"flex-end\"\n      alignItems=\"flex-end\"\n      spacing={1}\n      xs={12}\n    >\n      <TimeView message={message} />\n      <Grid item xs={5}>\n        <img\n          width=\"100%\"\n          src={`stamps/${message.text}.png`}\n          alt={message.text}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default MessageView;\n","import { VFC, useEffect, useRef } from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport smoothscroll from 'smoothscroll-polyfill';\nimport { useSelector } from '../stores';\nimport MessageView from './MessageView';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      overflow: 'scroll',\n      backgroundImage: 'url(line_background.jpg)',\n      backgroundSize: 'cover',\n    },\n    today: {\n      backgroundColor: '#516787',\n      color: 'white',\n      borderRadius: 16,\n      margin: '8px 0',\n      padding: '4px 12px',\n    },\n  })\n);\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call\nsmoothscroll.polyfill();\n\nconst Chat: VFC = () => {\n  const classes = useStyles();\n  const messages = useSelector((state) => state.talk.messages);\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const view = ref.current;\n    if (view) view.scrollTo({ top: view.scrollHeight, behavior: 'smooth' });\n  }, [messages]);\n\n  return (\n    <div className={classes.root} ref={ref}>\n      <Grid container justify=\"center\">\n        <Typography className={classes.today} variant=\"caption\">\n          今日\n        </Typography>\n      </Grid>\n      {messages.map((message) => (\n        <MessageView message={message} key={message.id} />\n      ))}\n    </div>\n  );\n};\n\nexport default Chat;\n","import scenarioAttendance from './scenarios/attendance';\nimport scenarioMiki from './scenarios/miki';\nimport scenarioResult from './scenarios/result';\n\nexport const stamps = [\n  'tehe',\n  'nasuo',\n  'dame',\n  'shirangana',\n  'sonnakoto',\n  'gungun',\n  'otome',\n  'mukako',\n  '9',\n  '10',\n  '11',\n  '12',\n] as const;\n\nexport type Stamps = typeof stamps[number];\n\nexport const scenarios = [scenarioMiki, scenarioAttendance, scenarioResult];\n","import { Scenario } from '../../stores/talk';\n\nconst scenarioMiki: Scenario = {\n  name: '八木美樹',\n  units: {\n    start: {\n      states: [\n        {\n          side: 'left',\n          name: 'miki',\n          text: '今日の昼',\n        },\n        {\n          side: 'left',\n          name: 'miki',\n          text: 'ひじきを食べた',\n        },\n        {\n          side: 'left',\n          name: 'miki',\n          text: '八木美樹です',\n        },\n        {\n          side: 'input',\n          root: {\n            shirangana: 'success',\n          },\n          defaultRoot: 'retry',\n        },\n      ],\n      interrupted: 'interrupted',\n    },\n    interrupted: {\n      states: [\n        {\n          side: 'left',\n          name: 'miki',\n          text: '最後まで言わせてください笑',\n        },\n        {\n          side: 'left',\n          name: 'miki',\n          text: '今日の昼',\n        },\n        {\n          side: 'left',\n          name: 'miki',\n          text: 'ひじきを食べた',\n        },\n        {\n          side: 'left',\n          name: 'miki',\n          text: '八木美樹です',\n        },\n        {\n          side: 'input',\n          root: {\n            shirangana: 'success',\n          },\n          defaultRoot: 'retry',\n        },\n      ],\n      interrupted: 'failure',\n    },\n    retry: {\n      states: [\n        {\n          side: 'left',\n          name: 'miki',\n          text: '......もう１回いきますねー、',\n        },\n        {\n          side: 'left',\n          name: 'miki',\n          text: 'たこ焼きは',\n        },\n        {\n          side: 'left',\n          name: 'miki',\n          text: 'ソース少な目',\n        },\n        {\n          side: 'left',\n          name: 'miki',\n          text: '八木美樹です',\n        },\n        {\n          side: 'input',\n          root: {\n            shirangana: 'success',\n          },\n          defaultRoot: 'failure',\n        },\n      ],\n      interrupted: 'failure',\n    },\n    success: {\n      states: [\n        {\n          side: 'left',\n          name: 'miki',\n          text: 'ありがとうございます！',\n        },\n        {\n          side: 'left',\n          name: 'miki',\n          text: '中等部２年、副会長の八木美樹です！',\n        },\n        { side: 'end' },\n      ],\n    },\n    failure: { states: [{ side: 'end' }] },\n  },\n};\n\nexport default scenarioMiki;\n","import { Scenario } from '../../stores/talk';\n\nconst scenarioAttendance: Scenario = {\n  name: '森ハヤシ',\n  units: {\n    start: {\n      states: [\n        {\n          side: 'left',\n          name: 'hayashi',\n          text: '出席を取ります',\n        },\n        {\n          side: 'left',\n          name: 'hayashi',\n          text: '中等部３年、白鳥沙南！',\n        },\n        {\n          side: 'input',\n          root: {\n            tehe: 'kokona',\n          },\n          defaultRoot: 'failure',\n        },\n      ],\n    },\n    kokona: {\n      states: [\n        {\n          side: 'left',\n          name: 'hayashi',\n          text: '野中ここな！',\n        },\n        {\n          side: 'input',\n          root: {\n            nasuo: 'neo',\n          },\n          defaultRoot: 'failure',\n        },\n      ],\n    },\n    neo: {\n      states: [\n        {\n          side: 'left',\n          name: 'hayashi',\n          text: '中等部２年、佐藤愛桜！',\n        },\n        {\n          side: 'input',\n          root: {\n            sonnakoto: 'miku',\n          },\n          defaultRoot: 'failure',\n        },\n      ],\n    },\n    miku: {\n      states: [\n        {\n          side: 'left',\n          name: 'hayashi',\n          text: '田中美空！',\n        },\n        {\n          side: 'input',\n          root: {\n            dame: 'miko',\n          },\n          defaultRoot: 'failure',\n        },\n      ],\n    },\n    miko: {\n      states: [\n        {\n          side: 'left',\n          name: 'hayashi',\n          text: '戸高美湖！',\n        },\n        {\n          side: 'input',\n          root: {\n            gungun: 'miki',\n          },\n          defaultRoot: 'failure',\n        },\n      ],\n    },\n    miki: {\n      states: [\n        {\n          side: 'left',\n          name: 'hayashi',\n          text: '八木美樹！',\n        },\n        {\n          side: 'input',\n          root: {\n            shirangana: 'yume',\n          },\n          defaultRoot: 'failure',\n        },\n      ],\n    },\n    yume: {\n      states: [\n        {\n          side: 'left',\n          name: 'hayashi',\n          text: '中等部１年、野崎結愛！',\n        },\n        {\n          side: 'input',\n          root: {\n            otome: 'sakia',\n          },\n          defaultRoot: 'failure',\n        },\n      ],\n    },\n    sakia: {\n      states: [\n        {\n          side: 'left',\n          name: 'hayashi',\n          text: '小等部６年、木村咲愛！',\n        },\n        {\n          side: 'input',\n          root: {\n            mukako: 'success',\n          },\n          defaultRoot: 'failure',\n        },\n      ],\n    },\n    success: { states: [{ side: 'end' }] },\n    failure: { states: [{ side: 'end' }] },\n  },\n};\n\nexport default scenarioAttendance;\n","import { Scenario } from '../../stores/talk';\n\nconst scenarioResult: Scenario = {\n  name: '結果発表',\n  units: {\n    start: {\n      states: [\n        {\n          side: 'left',\n          name: 'sana', // TODO: 結果を誰に言わせる？ランダムにする？\n          text: '結果発表！',\n        },\n        {\n          side: 'left',\n          name: 'sana',\n          text: 'あなたは......',\n        },\n        {\n          side: 'left',\n          name: 'sana',\n          text: '「ガチ父兄」です！', // TODO: scoreに応じて結果を変える\n        },\n        {\n          side: 'left',\n          name: 'sana',\n          text: 'もう一度あそぶ', // TODO: もう一度あそぶボタンを表示して、押されたらinitGameする\n        },\n        {\n          side: 'left',\n          name: 'sana',\n          text: 'Twitterで共有する', // TODO: 共有ボタンを表示して、押されたらTwitter画面へ\n        },\n        {\n          side: 'input',\n          root: {},\n          defaultRoot: '',\n        },\n      ],\n    },\n  },\n};\n\nexport default scenarioResult;\n","import { useState, useEffect, useRef } from 'react';\nimport { scenarios, Stamps } from '../data';\nimport { useDispatch } from '../stores';\nimport { initScenario, appendMessage, addScore, Message } from '../stores/talk';\n\nconst initialPos = {\n  scenarioIndex: 0,\n  unitKey: 'start',\n  stateIndex: 0,\n};\nconst INTERVAL = 1800;\nconst SUCCESS_UNIT_KEY = 'success';\n\nconst useGame = (): ((_: Stamps) => void) => {\n  const dispatch = useDispatch();\n  const [pos, setPos] = useState(initialPos);\n  const scenario = scenarios[pos.scenarioIndex];\n  const unit = scenario.units[pos.unitKey];\n  const timeoutRef = useRef<NodeJS.Timeout>();\n\n  // ゲーム開始処理\n  useEffect(() => {\n    dispatch(initScenario(scenarios[0].name));\n  }, [dispatch]);\n\n  // 一定間隔で左側のメッセージを追加していくためのuseEffect\n  useEffect(() => {\n    const nextMessage = unit.states[pos.stateIndex];\n    if (nextMessage.side === 'input') return;\n    const callback =\n      nextMessage.side === 'end'\n        ? () => {\n            if (pos.scenarioIndex + 1 === scenarios.length) return;\n            dispatch(initScenario(scenarios[pos.scenarioIndex + 1].name));\n            setPos((prev) => ({\n              scenarioIndex: prev.scenarioIndex + 1,\n              unitKey: initialPos.unitKey,\n              stateIndex: 0,\n            }));\n          }\n        : () => {\n            dispatch(appendMessage(nextMessage));\n            setPos((prev) => ({ ...prev, stateIndex: prev.stateIndex + 1 }));\n          };\n    timeoutRef.current = setTimeout(callback, INTERVAL);\n  }, [dispatch, pos, unit, scenario]);\n\n  const changeUnit = (nextUnitKey: string) => {\n    if (nextUnitKey === SUCCESS_UNIT_KEY) dispatch(addScore());\n    setPos((prev) => ({ ...prev, unitKey: nextUnitKey, stateIndex: 0 }));\n  };\n\n  const onClickStamp = (stamp: Stamps) => {\n    const newMessage: Message = {\n      side: 'right',\n      name: '',\n      isStamp: true,\n      text: stamp,\n    };\n    dispatch(appendMessage(newMessage));\n\n    const pointed = unit.states[pos.stateIndex];\n    if (pointed.side === 'input') {\n      const nextUnitKey = pointed.root[stamp] ?? pointed.defaultRoot;\n      if (nextUnitKey) changeUnit(nextUnitKey);\n    } else if (pos.stateIndex > 0 && timeoutRef.current) {\n      const nextUnitKey = unit.interrupted;\n      if (!nextUnitKey) return;\n      clearTimeout(timeoutRef.current);\n      changeUnit(nextUnitKey);\n    }\n  };\n\n  return onClickStamp;\n};\n\nexport default useGame;\n","import { VFC } from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport { ArrowDropDown } from '@material-ui/icons';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { stamps } from '../data/index';\nimport useGame from '../hooks/useGame';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      backgroundColor: '#edf1ee',\n    },\n    title: {\n      backgroundColor: '#234',\n      color: 'white',\n      padding: 4,\n    },\n    gridWrapper: {\n      padding: '0 16px',\n    },\n    stampGrid: {\n      padding: 8,\n    },\n    imgWrapper: {\n      width: '100%',\n      position: 'relative',\n      overflow: 'hidden',\n      paddingTop: '100%',\n    },\n    img: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      objectFit: 'cover',\n    },\n    button: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'transparent',\n      color: 'transparent',\n      cursor: 'pointer',\n      padding: 0,\n      borderStyle: 'none',\n    },\n  })\n);\n\nconst Stamp: VFC = () => {\n  const classes = useStyles();\n  const onClickStamp = useGame();\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        className={classes.title}\n      >\n        <Typography variant=\"body1\">スタンプ</Typography>\n        <ArrowDropDown />\n      </Grid>\n      <div className={classes.gridWrapper}>\n        <Grid container direction=\"row\" justify=\"center\">\n          {stamps.map((stamp) => (\n            <Grid item xs={3} key={stamp}>\n              <div className={classes.stampGrid}>\n                <div className={classes.imgWrapper}>\n                  <img\n                    src={`stamps/${stamp}.png`}\n                    alt={stamp}\n                    className={classes.img}\n                  />\n                  <button\n                    type=\"button\"\n                    className={classes.button}\n                    onClick={() => onClickStamp(stamp)}\n                  >\n                    {' '}\n                  </button>\n                </div>\n              </div>\n            </Grid>\n          ))}\n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nexport default Stamp;\n","import { VFC } from 'react';\nimport { Container, Paper } from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Header from './components/Header';\nimport Chat from './components/Chat';\nimport Stamp from './components/Stamp';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    container: {\n      flexGrow: 1,\n      padding: 0,\n      userSelect: 'none',\n    },\n    paper: {\n      height: '100vh',\n      '@supports (-webkit-touch-callout: none)': {\n        height: '-webkit-fill-available',\n      },\n      display: 'flex',\n      flexDirection: 'column',\n    },\n  })\n);\n\nconst App: VFC = () => {\n  const classes = useStyles();\n\n  return (\n    <Container maxWidth=\"xs\" className={classes.container}>\n      <Paper className={classes.paper} elevation={2}>\n        <Header />\n        <Chat />\n        <Stamp />\n      </Paper>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './stores';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}