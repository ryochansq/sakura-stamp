{"version":3,"sources":["stores/talk.ts","stores/index.ts","components/Header.tsx","components/MessageView.tsx","components/Chat.tsx","data/index.ts","data/scenarios/miki.ts","hooks/useStamp.ts","components/Stamp.tsx","hooks/useGame.ts","App.tsx","index.tsx"],"names":["talkSlice","createSlice","name","initialState","messages","currentUnit","index","loading","reducers","reset","state","appendMessage","action","payload","id","length","time","moment","format","push","increment","changeUnit","actions","store","configureStore","reducer","talk","useDispatch","rawUseDispatch","useSelector","rawUseSelector","useStyles","makeStyles","theme","createStyles","bar","backgroundColor","menuButton","marginRight","spacing","title","flexGrow","fontWeight","Header","classes","AppBar","position","className","Toolbar","variant","IconButton","edge","color","ArrowBackIos","Typography","PhoneOutlined","Menu","timeWrapper","margin","width","marginTop","leftRoot","display","padding","avatar","height","triangle","border","borderRight","transform","text","borderRadius","TimeView","message","Grid","item","container","direction","justify","alignItems","side","MessageView","Avatar","alt","src","xs","root","overflow","backgroundImage","backgroundSize","today","smoothscroll","polyfill","Chat","ref","useRef","useEffect","view","current","scrollTo","top","scrollHeight","behavior","map","stamps","scenarios","start","shirangana","other","success","retry","failure","useStamp","dispatch","stamp","isStamp","gridWrapper","stampGrid","imgWrapper","paddingTop","img","left","objectFit","button","cursor","borderStyle","Stamp","onClickStamp","ArrowDropDown","type","onClick","useGame","unit","a","Promise","res","setTimeout","effect","lastMessage","slice","pointed","nextUnit","userSelect","paper","flexDirection","App","Container","maxWidth","Paper","elevation","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1089016b.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign */\nimport moment from 'moment';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport type Message = {\n  side: 'left' | 'right';\n  name: string;\n  text: string;\n  isStamp?: boolean;\n  id?: number;\n  time?: string;\n};\n\nexport type Input = {\n  side: 'input';\n  root: {\n    [stamp: string]: string;\n  };\n};\n\nexport type Scenario = {\n  [name: string]: Unit;\n};\n\nexport type Unit = (Message | Input)[];\n\nexport interface TalkState {\n  name: string;\n  messages: Message[];\n  currentUnit: string;\n  index: number;\n  loading: boolean;\n}\n\nconst initialState: TalkState = {\n  name: '八木美樹',\n  messages: [],\n  currentUnit: 'start',\n  index: 0,\n  loading: false,\n};\n\nexport const talkSlice = createSlice({\n  name: 'talk',\n  initialState,\n  reducers: {\n    reset: (state) => {\n      state.messages = [];\n    },\n    appendMessage: (state, action: PayloadAction<Message>) => {\n      action.payload.id = state.messages.length;\n      action.payload.time = moment().format('H:mm');\n      state.messages.push(action.payload);\n    },\n    increment: (state) => {\n      state.index += 1;\n    },\n    changeUnit: (state, action: PayloadAction<string>) => {\n      state.currentUnit = action.payload;\n      state.index = 0;\n    },\n  },\n});\n\nexport const { reset, appendMessage, increment, changeUnit } =\n  talkSlice.actions;\n","import { configureStore } from '@reduxjs/toolkit';\nimport {\n  useDispatch as rawUseDispatch,\n  useSelector as rawUseSelector,\n  TypedUseSelectorHook,\n} from 'react-redux';\nimport { talkSlice } from './talk';\n\nexport const store = configureStore({\n  reducer: {\n    talk: talkSlice.reducer,\n  },\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const useDispatch = () => rawUseDispatch<AppDispatch>();\nexport const useSelector: TypedUseSelectorHook<RootState> = rawUseSelector;\n","import { VFC } from 'react';\nimport { AppBar, IconButton, Toolbar, Typography } from '@material-ui/core';\nimport { ArrowBackIos, Menu, PhoneOutlined } from '@material-ui/icons';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { useSelector } from '../stores';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    bar: {\n      backgroundColor: '#234',\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n      fontWeight: 700,\n    },\n  })\n);\n\nconst Header: VFC = () => {\n  const classes = useStyles();\n  const title = useSelector((state) => state.talk.name);\n\n  return (\n    <AppBar position=\"static\" className={classes.bar}>\n      <Toolbar variant=\"dense\">\n        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\">\n          <ArrowBackIos />\n        </IconButton>\n        <Typography variant=\"body1\" className={classes.title}>\n          {title}\n        </Typography>\n        <IconButton color=\"inherit\">\n          <PhoneOutlined />\n        </IconButton>\n        <IconButton color=\"inherit\">\n          <Menu />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import { VFC } from 'react';\nimport { Avatar, Grid, Typography } from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { Message } from '../stores/talk';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    timeWrapper: {\n      margin: '0 4px',\n      width: 40,\n    },\n    time: {\n      color: '#345',\n      marginTop: -4,\n    },\n    leftRoot: {\n      display: 'flex',\n      padding: 4,\n    },\n    avatar: {\n      width: 32,\n      height: 32,\n    },\n    triangle: {\n      width: 0,\n      height: 0,\n      margin: '4px 0 0 -6px',\n      border: '6px solid transparent',\n      borderRight: '18px solid #edf1ee',\n      '-webkit-transform': 'rotate(35deg)',\n      transform: 'rotate(35deg)',\n    },\n    text: {\n      backgroundColor: '#edf1ee',\n      borderRadius: 14,\n      padding: '4px 12px',\n      margin: '6px 0 0 -8px',\n    },\n  })\n);\n\ntype Props = {\n  message: Message;\n};\n\nconst TimeView: VFC<Props> = ({ message }: Props) => {\n  const classes = useStyles();\n  return (\n    <Grid\n      item\n      container\n      direction=\"column\"\n      justify=\"flex-end\"\n      alignItems={message.side === 'left' ? 'flex-start' : 'flex-end'}\n      className={classes.timeWrapper}\n    >\n      {message.side === 'right' && (\n        <Typography variant=\"caption\" className={classes.time}>\n          既読\n        </Typography>\n      )}\n      <Typography variant=\"caption\" className={classes.time}>\n        {message.time}\n      </Typography>\n    </Grid>\n  );\n};\n\nconst MessageView: VFC<Props> = ({ message }: Props) => {\n  const classes = useStyles();\n\n  if (message.side === 'left')\n    return (\n      <div className={classes.leftRoot}>\n        <Avatar\n          alt={message.name}\n          src={`members/${message.name}.jpg`}\n          className={classes.avatar}\n        />\n        <div className={classes.triangle} />\n        <Typography variant=\"body2\" className={classes.text}>\n          {message.text}\n        </Typography>\n        <TimeView message={message} />\n      </div>\n    );\n\n  return (\n    <Grid\n      item\n      container\n      direction=\"row\"\n      justify=\"flex-end\"\n      alignItems=\"flex-end\"\n      spacing={1}\n      xs={12}\n    >\n      <TimeView message={message} />\n      <Grid item xs={5}>\n        <img\n          width=\"100%\"\n          src={`stamps/${message.text}.png`}\n          alt={message.text}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default MessageView;\n","import { VFC, useEffect, useRef } from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport smoothscroll from 'smoothscroll-polyfill';\nimport { useSelector } from '../stores';\nimport MessageView from './MessageView';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      overflow: 'scroll',\n      backgroundImage: 'url(line_background.jpg)',\n      backgroundSize: 'cover',\n    },\n    today: {\n      backgroundColor: '#516787',\n      color: 'white',\n      borderRadius: 16,\n      margin: '8px 0',\n      padding: '4px 12px',\n    },\n  })\n);\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call\nsmoothscroll.polyfill();\n\nconst Chat: VFC = () => {\n  const classes = useStyles();\n  const messages = useSelector((state) => state.talk.messages);\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const view = ref.current;\n    if (!view) return;\n    view.scrollTo({ top: view.scrollHeight, behavior: 'smooth' });\n  }, [messages]);\n\n  return (\n    <div className={classes.root} ref={ref}>\n      <Grid container justify=\"center\">\n        <Typography className={classes.today} variant=\"caption\">\n          今日\n        </Typography>\n      </Grid>\n      {messages.map((message) => (\n        <MessageView message={message} key={message.id} />\n      ))}\n    </div>\n  );\n};\n\nexport default Chat;\n","import scenarioMiki from './scenarios/miki';\n\nexport const stamps = [\n  'tehe',\n  'nasuo',\n  'dame',\n  'shirangana',\n  'sonnakoto',\n  'gungun',\n  'otome',\n  'mukako',\n  '9',\n  '10',\n  '11',\n  '12',\n] as const;\n\nexport type Stamps = typeof stamps[number];\n\nexport const scenarios = [scenarioMiki];\n","import { Scenario } from '../../stores/talk';\n\nconst scenarioMiki: Scenario = {\n  start: [\n    {\n      side: 'left',\n      name: 'yagi',\n      text: '今日の昼',\n    },\n    {\n      side: 'left',\n      name: 'yagi',\n      text: 'ひじきを食べた',\n    },\n    {\n      side: 'left',\n      name: 'yagi',\n      text: '八木美樹です',\n    },\n    {\n      side: 'input',\n      root: {\n        shirangana: 'success',\n        other: 'retry',\n      },\n    },\n  ],\n  success: [\n    {\n      side: 'left',\n      name: 'yagi',\n      text: 'ありがとうございます！',\n    },\n    {\n      side: 'left',\n      name: 'yagi',\n      text: '中等部２年、副会長の八木美樹です！',\n    },\n    { side: 'input', root: {} },\n  ],\n  retry: [\n    {\n      side: 'left',\n      name: 'yagi',\n      text: '......もう１回いきますねー、',\n    },\n    {\n      side: 'left',\n      name: 'yagi',\n      text: 'たこ焼きは',\n    },\n    {\n      side: 'left',\n      name: 'yagi',\n      text: 'ソース少なめ',\n    },\n    {\n      side: 'left',\n      name: 'yagi',\n      text: '八木美樹です',\n    },\n    {\n      side: 'input',\n      root: {\n        shirangana: 'success',\n        other: 'failure',\n      },\n    },\n  ],\n  failure: [{ side: 'input', root: {} }],\n};\n\nexport default scenarioMiki;\n","import { useDispatch } from '../stores';\nimport { talkSlice, Message } from '../stores/talk';\nimport { Stamps } from '../data/index';\n\nconst useStamp = (): ((stamp: Stamps) => void) => {\n  const dispatch = useDispatch();\n  const onClickStamp = (stamp: Stamps) => {\n    const message: Message = {\n      side: 'right',\n      name: '',\n      isStamp: true,\n      text: stamp,\n    };\n    dispatch(talkSlice.actions.appendMessage(message));\n  };\n  return onClickStamp;\n};\n\nexport default useStamp;\n","import { VFC } from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport { ArrowDropDown } from '@material-ui/icons';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { stamps } from '../data/index';\nimport useStamp from '../hooks/useStamp';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      backgroundColor: '#edf1ee',\n    },\n    title: {\n      backgroundColor: '#234',\n      color: 'white',\n      padding: 4,\n    },\n    gridWrapper: {\n      padding: '0 16px',\n    },\n    stampGrid: {\n      padding: 8,\n    },\n    imgWrapper: {\n      width: '100%',\n      position: 'relative',\n      overflow: 'hidden',\n      paddingTop: '100%',\n    },\n    img: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      objectFit: 'cover',\n    },\n    button: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'transparent',\n      color: 'transparent',\n      cursor: 'pointer',\n      padding: 0,\n      borderStyle: 'none',\n    },\n  })\n);\n\nconst Stamp: VFC = () => {\n  const classes = useStyles();\n  const onClickStamp = useStamp();\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        className={classes.title}\n      >\n        <Typography variant=\"body1\">スタンプ</Typography>\n        <ArrowDropDown />\n      </Grid>\n      <div className={classes.gridWrapper}>\n        <Grid container direction=\"row\" justify=\"center\">\n          {stamps.map((stamp) => (\n            <Grid item xs={3} key={stamp}>\n              <div className={classes.stampGrid}>\n                <div className={classes.imgWrapper}>\n                  <img\n                    src={`stamps/${stamp}.png`}\n                    alt={stamp}\n                    className={classes.img}\n                  />\n                  <button\n                    type=\"button\"\n                    className={classes.button}\n                    onClick={() => onClickStamp(stamp)}\n                  >\n                    {' '}\n                  </button>\n                </div>\n              </div>\n            </Grid>\n          ))}\n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nexport default Stamp;\n","import { useEffect } from 'react';\nimport { scenarios } from '../data';\nimport { useDispatch, useSelector } from '../stores';\nimport { appendMessage, changeUnit, increment } from '../stores/talk';\n\nconst useGame = (): void => {\n  const dispatch = useDispatch();\n  const unit = useSelector((state) => state.talk.currentUnit);\n  const index = useSelector((state) => state.talk.index);\n  const messages = useSelector((state) => state.talk.messages);\n\n  useEffect(() => {\n    const effect = async () => {\n      await new Promise((res) => setTimeout(res, 2000));\n      const message = scenarios[0][unit][index];\n      if (message.side === 'input') return;\n      dispatch(appendMessage(message));\n      dispatch(increment());\n    };\n    void effect();\n  }, [dispatch, index, unit]);\n\n  useEffect(() => {\n    if (messages.length === 0) return;\n    const lastMessage = messages.slice(-1)[0];\n    if (lastMessage.side === 'left') return;\n    const pointed = scenarios[0][unit][index];\n    if (pointed.side !== 'input') return; // これは割り込みの場合。\n    // TODO: 割り込まれた場合の処理を書きたい\n\n    const nextUnit = pointed.root[lastMessage.text] || pointed.root.other;\n    if (nextUnit) dispatch(changeUnit(nextUnit));\n  }, [dispatch, messages, unit, index]);\n};\n\nexport default useGame;\n","import { VFC } from 'react';\nimport { Container, Paper } from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Header from './components/Header';\nimport Chat from './components/Chat';\nimport Stamp from './components/Stamp';\nimport useGame from './hooks/useGame';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    container: {\n      flexGrow: 1,\n      padding: 0,\n      userSelect: 'none',\n    },\n    paper: {\n      height: '100vh',\n      '@supports (-webkit-touch-callout: none)': {\n        height: '-webkit-fill-available',\n      },\n      display: 'flex',\n      flexDirection: 'column',\n    },\n  })\n);\n\nconst App: VFC = () => {\n  const classes = useStyles();\n  useGame();\n\n  return (\n    <Container maxWidth=\"xs\" className={classes.container}>\n      <Paper className={classes.paper} elevation={2}>\n        <Header />\n        <Chat />\n        <Stamp />\n      </Paper>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './stores';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}